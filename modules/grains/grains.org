* ADC mix params
*** fader_i<n>
*** pan_i<n>
*** effect_i<n>
*** aux0_i<n>
*** aux1_i<n>
* Global Grain Params
*** scrubberFadeLength i16
   (whole samples)
*** echo fade-length i16
   (whole samples)
* Per-Grain Params
** Grain Mix params
*** source_g<m> i8[1:8]
    Choose grain input between ADC1-4 , DAC3-4, effect bus or mono_out
*** fader_g<m>
*** pan_g<m>
*** effect_g<m>
*** aux0_g<m>
*** aux1_g<m>
*** phase_g<m> bool
    So we can flip the phase back into effect bus for flanger fx
** Scrub params
*** scrubPitch_g<m> f8x8[0:7]
*** scrubLength_g<m> i24
    set grain boundary to |scrub-time * (pitch-factor -
    echo-tap-speed)|
*** scrubRandomise i24
    randomising scrub-time makes phase-modulation distortion less
    disturbing If scrub time is a constant this gives ring-mod-like
    distortion.
*** scrubEdgeBehaviour i8[0:1]
    does pitchshifting readhead bounce or wrap at grain boundary?
** Echo params
*** echoTime fx24x8
    allows the user to force read head to a point, e.g:
    - set echo time for simple echo fx
    - trigger one-shot sample for pre-recorded audio
*** echoSpeed f8x8
    For realtime FX this guy should be 1, so the echo-tap stays in
    sync with write head When a sample is loaded into the fifo this guy
    can take a value between 0 and 7
*** echoEdgeBehaviour i8[0:2]
    does echo-tap head bounce, wrap or stall at echo boundary?
*** echoMin f24x8
    echo boundary nearest to write-head
*** echoMax f24x8
    echo boundary furthest from write-head
* How to implement pitchshift on top of echoTap
** Decoupling scrubberhead from echo-tap
   Echotap wrap behaviour should be abstracted from the scrubberhead.
   so the scrubberhead 'requests' samples in the echoTap time
   coordinate this way if echoTap is currently wrapping (e.g repeating
   sampler application) the scrubberhead can pitchshift without
   knowledge of echoTap internal state.
** 
